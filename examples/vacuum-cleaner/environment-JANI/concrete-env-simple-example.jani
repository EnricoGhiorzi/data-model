// The environment model describes the four cell grid depicted in the BT example for the vacuum cleaner
// The robot is placed at the lower left cell initially
// Like in the larger model it has a round shape with a radius of 0.3m and a height of 0.2m, but this information is not used in this simple example here.
// Lengths are given in meters.
// This is only the environment part of the model, i.e., it is an excerpt of a fully functional model describing the entire setup of the full robot behavior in the environment.


{
    "name": "simple-robot-in-simple-grid",

    // [...] Rest of model including behavior, skills, etc.

    "rob-env-model":
    { 
        "name": "simple-grid",
        "boundaries": [
            {
                "x": 0,
                "y": 2
            },
            {
                "x": 1,
                "y": 2
            },
            {
                "x": 2,
                "y": 1
            },
            {
                "x": 2,
                "y": 0
            },
            {
                "x": 1,
                "y": -1
            },
            {
                "x": 0,
                "y": -1
            },
            {
                "x": -1,
                "y": 0
            },
            {
                "x": -1,
                "y": 1
            }
        ],
        "obstacles": [],    // there are no obstacles in this simple model
        "robots": [
            {
                "name": "simple-robot",
                "pose": {
                    "x": 0,
                    "y": 0,
                    "theta":{           // pi/2 rad = 90 degrees from x-axis, i.e., moving direction is up
                        "op": "/",
                        "left": "π",
                        "right": 2.0
                    }
                },
                "shape": {
                    "radius": 0.3,
                    "height": 0.2
                },
                "perception": {
                    "boundaries": {},   //Assuming the robot can only look one cell ahead and it is currently looking up, the next cell is free.
                    "obstacles": {},
                    "pose": {
                        "x": 0,
                        "y": 0,
                        "theta":{
                            "op": "/",
                            "left": "π",
                            "right": 2.0
                        }
                    }
                },
                "linear-velocity": 1,
                "angular-velocity": 0
            }
        ]
    }
}